<>: khá
34. Kết nối bằng nhau các quan hệ theo thuộc tính là:Thực hiện tích Đề Các và phép chọn

“select * from r where B = 17” σB=17(r)

“select dis琀椀nct A from r” ΠA(r)

“select dis琀椀nct A, F from r, s where C = D” ΠA,F(σC=D (r x s))

“select dis琀椀nct * from r, s” r x s

“select * from r1 where (A, B, C) not in (select * from r2)” r-s

Trong mô hình cơ sở dữ liệu mạng, mỗi nút có thể kết nối với các nút khác như thế nào? c.
Theo mối quan hệ nhiều-nhiều

Mô hình cơ sở dữ liệu mạng cho phép điều gì mà mô hình phân cấp không hỗ trợ?
Mỗi nút có thể có nhiều cha

Hệ quản trị cơ sở dữ liệu đảm bảo sự độc lập dữ liệu bằng cách nào
a. Bằng cách tách biệt cấu trúc lưu trữ vật lý và logic của dữ liệu

Mô hình cơ sở dữ liệu nào được sử dụng phổ biến nhất? phù hợp nhất cho việc quản lý dữ liệu trong một tổ chức lớn?
Mô hình quan hệ

Khi một thực thể con có thể thuộc nhiều thực thể cha cùng lúc, đây gọi là: 
Chuyên biệt hóa chồng chéo (Overlapping Specialization)

Mô hình ER có thể được chuyển đổi sang mô hình nào?
a.Mô hình hướng đối tượng
b.Mô hình quan hệ

Thuộc tính dẫn xuất (Derived Attribute) được xác định như thế nào?
Được tính toán từ các thuộc tính khác

Trong mô hình ER, chuyên biệt hóa thường liên quan
b.Kế thừa thuộc tính từ thực thể cha
c.Chia nhỏ thực thể thành nhiều lớp con
d.Áp dụng ràng buộc trong cơ sở dữ liệu

Ràng buộc toàn vẹn thực thể liên quan đến:.
Giá trị NULL trong khóa chính

Ràng buộc toàn vẹn tham chiếu đảm bảo điều gì?
a. Mọi giá trị khóa ngoại phải tồn tại trong bảng cha

Phép toán nào giúp tìm ra những nhân viên đã làm việc trong tất cả các dự án của một công ty?
Phép chia (Division)

Phép nối Theta (Theta Join) khác với phép nối tự nhiên (Natural Join) như thế nào?
Nó có thể sử dụng bất kỳ điều kiện nào để nối

Phép nối (Join) là một mở rộng của phép toán nào?
d. Phép tích Cartesian

Kết quả của phép chiếu (Projection) có thể chứa các bộ trùng lặp khôn
a.Không, bao giờ cũng loại bỏ trùng lặp

Câu 5 Lệnh nào xóa bản ghi có ngày tạo là 30 ngày trước trong bảng logs(created_at)?
cả 2 đều đúng




Câu 35. Trong SQL, ngôn ngữ định nghĩa dữ liệu bao gồm các chức năng:
a. Tạo, sửa và xóa cấu trúc quan hệ. Bảo mật và quyền truy nhập.

Cho lược đồ quan hệ R= <U,F> với U= {A,B,C,D,E,F,G,H,I,J} có khóa chính là {A,B} và F = {AB -> CDEFGHIJ, A-> EFGHIJ,
F-> IJ}. Hãy chuẩn hóa quan hệ R về dạng chuẩn 3NF.
Kết quả chúng ta có có 3 quan hệ: R1 với U1= {ABCD}; R21 với U21= {AEFGH} và R22 với U22= {FIJ}

Kết quả của các phép thao tác dữ liệu là: quan hệ 

Cho lược đồ quan hệ R = U(A, B, C) và F={AB→C, C→A}. Phụ thuộc hàm AB → ABC được tạo ra từ luật nào sau đây?
Luật tăng trưởng (thêm AB vào phụ thuộc hàm AB→C)

Quá trình chuẩn hoá dữ liệu là quá trình: Tách lược đồ quan hệ không làm tổn thất thông tin

Cho quan hệ: SV(MaSV, HoDem, Ten, NgaySinh, GioiTinh, QueQuan). Câu lệnh SQL nào sau đây cho phép tạo khung
nhìn SV_Nu gồm các cột HoTen, Ngaysinh, Gioitinh với những sinh viên có GioiTinh là Nu
CREATE VIEW SV_NU as select HoDem+' '+ten as HoTen, Ngaysinh, Gioitinh from sv where gioitinh like 'Nu';

Ngôn ngữ định nghĩa dữ liệu bao gồm các lệnh cho phép là gì?
Khai báo kiểu dữ liệu của CSDL

CREATE TABLE mô tả quan hệ và các thuộc tính.

Quan hệ (Relation) là một tập con của tích Đề Các (Cartesian Product) giữa các miền dữ liệu. Một quan hệ có thể được xem như một bảng, trong đó các cột là các thuộc tính, và các hàng là các bộ dữ liệu.

Hai bảng trong một CSDL quan hệ liên kết với nhau thông qua: Thuộc tính của các trường được chọn (không nhất thiết phải là khóa)

Câu 26. Các toán hạng trong các phép toán là:
a. Các quan hệ

Câu 43. Mệnh đề GROUP BY ... HAVING
a. Phân hoạch các bộ của một quan hệ thành các nhóm riêng biệt và áp dụng các phép toán gộp cho các
nhóm.

Giả sử ta có quan hệ S có 3 thuộc tính ABC, gồm 3 bộ theo thứ tự là: (1, 2, 3); (4, 2, 3); và (5, 3, 3). Tập phụ thuộc hàm
đúng trên mọi thể hiện của S là.
Không thể có vì mỗi tập phụ thuộc hàm chỉ có thể đúng với 1 thể hiện của S

Cho các lược đồ quan hệ sau: R=(A, B, C) và S = (D, E, F). Xét quan hệ r(R); s(S) cùng r1, r2 là hai quan hệ trên R. Câu
lệnh SQL “select * from r1 where (A, B, C) in (select * from r2)” thực hiện biểu thức đại số quan hệ nào:
r1 Ո r2

Phép chiếu - WHERE
Phép chọn - SELECT
Phép tích - FROM
Phép gộp nhóm - GROUP BY

Tập hợp tất cả các (n+m)-bộ có n thành phần đầu tiên là 1 bộ thuộc r và m thành phần
sau là 1 bộ thuộc s được gọi là: tích Đề các của 2 quan hệ r và s, ký hiệu r x s

Quan hệ 3NF có thể được áp dụng trong tìm kiếm vì: không xuất hiện các dị thường
thông tin khi thực hiện các phép lưu trữ

Tối ưu theo nghĩa biến đổi 1 biểu thức đại số quan hệ: cho cùng một kết quả với thời
gian thực hiện và sử dụng bộ nhớ ít hơn

26. Ngôn ngữ thao tác dữ liệu: là một tập các phép toán dùng để cập nhật, bổ sung trên các
hệ cơ sở dữ liệu

27. Mô hình quan niệm: là cách nhìn dữ liệu 1 cách tổng quát của người sử dụng

28. Các bước chính để tạo CSDL: tạo bảng - chọn khóa chính cho bảng - đặt tên bảng và lưu
cấu trúc bảng - tạo liên kết bảng

Hệ quản trị CSDL (DBMS) là: phần mềm điều khiển các chiến lược truy nhập CSDL

29. Các thuộc tínnh khóa là: các phần tử của khóa

Mô hình ngoài: nội dung thông 琀椀n của một phần dữ liệu dưới cách nhìn của người sử
dụng

nếu trong câu lệnh SELECT có chứa GROUP BY, hệ thống sẽ phân h oạc h quan
hệ thành nhi ều nhóm tách bi ệt nhau và thực hiện các phép gộp nhóm

Câu 16: Trong đại số quan hệ, phép chia (R ÷ S) có thể được biểu diễn bằng các phép toán nào?
 	B) π_{A}(R) − π_{A}((π_{A}(R) × S) − R)

Tối ưu hóa câu hỏi bằng cách: thực hiện phép chiếu và phép chọn - sau đó là phép kết
nối

Ngôn ngữ định nghĩa dữ liệu - DDL: được đặc tả bằng 1 ngôn ngữ, 1 phần của hệ quản
trị CSDL

Có thể chèn thêm thông 琀椀n 1 loại cap khi chưa được lắp đặt: không thể được, vì giá trị
khóa không xác định

Nguyên tắc đánh giá tối ưu hóa biểu thức quan hệ: ưu tiên thực hiện các phép chọn và
phép chiếu

Câu nào SAI : việc xác định khóa phụ thuộc vào quan hệ logic của các dữ liệu chứ không
phụ thuộc vào giá trị các dữ liệu

Khi thực hiện các phép toán trong một biểu thức quan hệ, thứ tự ưu 琀椀ên là: các phép
toán 1 ngôi có thứ tự cao hơn các phép toán 2 ngôi

64. Mục 琀椀êu của phép tách lược đồ quan hệ là: nhằm loại bỏ dị thường thông 琀椀n khi thực
hiện các phép lưu trữ

65. Quá trình tách không làm tổn thất thông 琀椀n theo nghĩa: quan hệ gốc được khôi phục
từ các quan hệ chiếu bằng phép kết nối tự nhiên

Mệnh đề AS được sử dụng để thay
đổi tên một cột trong tập kết quả hoặc để gán tên cho một cột dẫn xuất

INDEX trong SQL là gì?: là một thuộc 琀nh bảng CSDL, giúp tăng tốc 琀m kiếm dữ liệu
trong 1 bảng

Từ khóa SQL nào được sử dụng để chỉ truy xuất các giá trị duy nhất?: DISTINCT

13. Cho bài toán: Một công ty có nhiều cửa hàng. Các cửa hàng nhận hàng hóa trực 琀椀ếp
từ nhà cung cấp, rồi bán trực 琀椀ếp cho khách hàng. Công ty có 1 số trung tâm bảo
hành, nhân viên bảo hành chịu trách nhiệm bảo hành cho 1 số lượng khách hàng.
Nhóm nào sau đây liệt kê đầy đủ các thực thể của bài toán quản lí: Cửa hàng, hàng
hóa, nhà cung cấp, khách hàng, trung tâm bảo hành, nhân viên

Cho bảng customer(cat_id, customer_name). Câu lệnh nào sau đây sẽ thực thi thành
công? SELECT customer_name FROM customers WHERE cat_id = 12 ORDER BY cat_id;

R=, F = {B --> C, C--> B, A --> GD}, khóa quan hệ là: ACE

R =, F:={AB --> C,D --> EG,C--> A,BE --> C, BC --> D, CG --> BD,ACD --> B, CE --> AG}
{
~EB, CE, BC không là khóa của lược đồ quan hệ
~EC, CE, BC khóa của lược đồ quan hệ
~AB, CG, CD không là khóa của lược đồ quan hệ
= AB, CG, CD khóa của lược đồ quan hệ
}
A, B ,C, D, E, G

“select * from r where B = 17” σB=17(r)

“select dis琀椀nct A from r” ΠA(r)

“select dis琀椀nct A, F from r, s where C = D”  ΠA,F(σC=D (r x s))

“select dis琀椀nct * from r, s” r x s

“select * from r1 where (A, B, C) in (select * from r2)” r1 Ո r2

“select * from r1 where (A, B, C) not in (select * from r2)” r - s

Giả sử ta có quan hệ S có 3 thuộc 琀nh ABC, gồm 3 bộ theo thứ tự là: (1, 2, 3); (4, 2, 3); và (5, 3,
3). Tập phụ thuộc hàm đúng trên mọi thể hiện của S là: KHÔNG THỂ CÓ vì mỗi tập phụ thuộc
hàm chỉ có thể đúng với 1 thể hiện của S

Cho quan hệ R(SoHD, MaKH, TenKH, DiaChiKH, NgayDathang, {MaHang, TenHang, SoLuong,
ThanhTien}). Giả thiết rằng đơn giá của mỗi mặt hàng không thay đổi. Hãy chuẩn hóa quan hệ R
về dạng chuẩn 3NF.Sau khi chuẩn hóa đến 3NF chúng ta có 4 quan hệ sau: R11 với U11 = {SoHD,
MaKH, NgayDathang}; R12 với U12 = {MaKH, TenKH, DiaChiKH}; R21 với U21 =
{SoHoadon,Mahang,SoLuong}; R22 với U22 = {Mahang, Tenhang, DonGia}

giả sử ta có quan hệ S có 3 thuộc tính theo thứ tự là (1, 2, 3); (4, 2, 3) và (5,3,3). Các phụ thuộc hàm nào sau đây đúng trên S
b. BC -> A



LỊCH SỬ CƠ SỞ DỮ LIỆU
- Những năm 60: Mô hình dữ liệu phân cấp + mô hình dạng mạng
- Năm 1970: Mô hình quan hệ
- Năm 1976: Mô hình thực thể liên kết
- Những năm 80: Mô hình hướng đối tượng
- Những năm 90: Oracle Database, SQL Server, MySQL, PostgreSQL, SQLite
- Đầu thế kỷ 21: NoSQL (MongoDB)
KHÁI NIỆM
- Cơ sở dữ liệu là tập hợp có tổ chức các dự liệu có quan hệ logic với nhau
- Các loại dữ liệu:
+ Dữ liệu có cấu trúc: bảng dữ liệu, hàng, cột,...
+ Dữ liệu không có cấu trúc: hình ảnh, video, âm thanh,...
+ Dữ liệu bán cấu trúc: email,...
- Hệ quản trị cơ sở dữ liệu là hệ thống phần mềm cho phép: tạo lập cơ sở dữ liệu và
điều khiển mọi truy nhập đối với cơ sở dữ liệu đó
- Chức năng của Hệ quản trị cơ sở dữ liệu:
+ Định nghĩa
+ Xây dựng
+ Xử lý
+ Chia sẻ
+ Bảo vệ

- Hệ cơ sở dữ liệu gồm 4 thành phần:
+ Cơ sở dữ liệu hợp nhất
+ Người sử dụng
+ Hệ quản trị cơ sở dữ liệu
+ Phần cứng
CÁC NGÔN NGỮ GIAO TIẾP GIỮA NGƯỜI SỬ DỤNG VÀ CSDL
- Ngôn ngữ định nghĩa dữ liệu (DDL)
- Ngôn ngữ thao tác dữ liệu (DML)
- Ngôn ngữ truy vấn có cấu trúc (SQL)
- Ngôn ngữ quản lý dữ liệu (DCL)
PHÂN LOẠI HỆ CƠ SỞ DỮ LIỆU
- Theo mô hình dữ liệu: mạng – phân cấp – quan hệ - hướng đối tượng
- Theo số người sử dụng: một người dùng – nhiều người dùng
- Theo tính phân tán: tập trung (cá nhân, trung tâm, khách/chủ) – phân tán
- Theo tính thống nhất của dữ liệu: đồng nhất – không đồng nhất
CÁC MỨC BIỂU DIỄN CỦA MỘT CƠ SỞ DỮ LIỆU
- Mức vật lý:
+ Mức thấp nhất của sự trừu tượng
+ Tồn tại trong thiết bị lưu trữ (lưu trữ ở mức trong)
+ Dành cho người quản trị và người sử dụng chuyên môn
- Mức quan niệm:
+ Định nghĩa cấu trúc logic của dữ liệu, dữ liệu nào được lưu trữ và mối quan hệ giữa
chúng
+ Là biểu diễn trừu tượng của mức vật lý
+ Dành cho chuyên viên tin học khảo sát và phân tích, quản trị CSDL
- Mức khung nhìn (mức ngoài, lược đồ con):
+ Mô tả cách người sử dụng nhìn thấy dữ liệu
+ Mức người sử dụng và chương trình ứng dụng
+ Nhìn thấy toàn bộ hoặc một phần CSDL theo góc độ khác nhau
+ Chỉ có thể làm việc với một phần CSDL

CÁC MÔ HÌNH DỮ LIỆU
- Mô hình mức cao:
+ Sử dụng các khái niệm gần gũi, tự nhiên, giàu ngữ nghĩa
+ Gồm: Mô hình ERD, mô hình đối tượng
- Mô hình cài đặt: Gồm mô hình quan hệ, mạng, phân cấp
- Mô hình mức thấp
MÔ HÌNH DỮ LIỆU QUAN HỆ
- Ra đời: Codd, năm 1970
- Biểu diễn dưới dạng bảng
- Dựa trên lý thuyết toán học, gần với cấu trúc tệp, cấu trúc dữ liệu
- Thuộc tính: Một tính chất riêng biệt của một đối tượng
- Phân loại thuộc tính:
+ Đơn trị
+ Đa trị
+ Kết hợp
+ Suy diễn
- Miền: Là tập con của một kiểu dữ liệu. Ký hiệu dom(A)
- Quan hệ: Là một tập hữu hạn các thuộc tính
- Bộ: Là thông tin của một đối tượng thuộc quan hệ
Khi biểu diễn dưới dạng bảng: Bộ chính là các dòng, cột chính là các thuộc tính,
quan hệ là các bảng
- Khóa: 2 loại chính: Khóa chính và khóa ngoại
+ Khóa chính: Đại diện đặc trưng cho một bộ dữ liệu, các giá trị là duy nhất
+ Khóa ngoại: Một hay nhiều thuộc tính của quan hệ này là khóa của quan hệ khác
MÔ HÌNH DỮ LIỆU LIÊN KẾT THỰC THỂ
- Ký hiệu:

Tên thuộc tính

Tên thực thể Tên quan hệ

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK

- Loại liên kết:
+ 1 – 1
+ 1 – nhiều
+ nhiều – 1
+ nhiều – nhiều

CHƯƠNG II
MỘT SỐ NGÔN NGỮ KHAI
THÁC CƠ SỞ DỮ LIỆU

ĐẠI SỐ QUAN HỆ
- Phép hợp: r ∪ s:
Tập tất cả các bộ thuộc r hoặc thuộc s hoặc thuộc cả 2
Hiểu đơn giản: Gom hết các dòng của 2 bảng lại thành 1 bảng duy nhất, các dòng nào
có dữ liệu giống nhau thì chỉ xuất hiện 1 lần.

- Phép giao: r ∩ s:
Tập tất cả các bộ thuộc cả 2 quan hệ r và s
Hiểu đơn giản: Các dòng nào xuất hiện ở cả 2 bảng thì lấy.

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK

- Phép trừ: r − s:
Tập tất cả các bộ thuộc r nhng không thuộc s
Hiểu đơn giản: Lấy bảng r và loại bỏ đi những dòng của r mà cũng xuất hiện ở s.
Lưu ý: r − s ≠ s − r

- Tích Descartes (Đề-các): r × s
Tập tất cả các n + m bộ có n thành phần đầu tiên thuộc r và m thành phần sau là
một bộ thuộc s
Hiểu đơn giản: Lấy từng dòng của r ghép với tất cả các dòng còn lại của s.

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK

- Phép chiếu: πX(r)
Tập các bộ của r xác định trên tập thuộc tính X
Hiểu đơn giản: Lấy ra các cột X từ bảng r

- Phép chọn: σF(r)
Tập tất cả các bộ thuộc r thỏa mãn điều kiện F
Hiểu đơn giản: Lấy ra các dòng mà có dữ liệu khiến điều kiện F đúng

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK

- Phép kết nối: r ⋈ s
Hiểu đơn giản: Ghép hai bảng lại với nhau dựa trên 2 cột có giá trị giống nhau hoặc
thỏa mãn điều kiện nào đó

- Phép chia: r ÷ s
Tập tất cả các bộ t sao cho với mọi bộ v ∈ s thì t ghép với v thuộc r

Ta thấy ở đây chỉ có hai bộ (A, B, C) thuộc r mà có đủ 2 dòng của s là:
+ Bộ (α, a, γ): (α, a, γ, a, 1), (α, a, γ, b, 1)
+ Bộ (γ, a, γ): (γ, a, γ, a, 1), (γ, a, γ, b, 1)
Vậy nên kết quả của phép r ÷ s chính là hai bộ đó.
- Một số các hàm kết hợp:

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
+ SUM: tính tổng
+ AVG: tính trung bình
+ MAX: tính giá trị lớn nhất
+ MIN: tính giá trị nhỏ nhất
+ COUNT: đếm số giá trị
PHÉP VỊ TỪ BIẾN BỘ, BIẾN MIỀN, NGÔN NGỮ ĐẠI SỐ QUAN HỆ THUẦN TÚY ISBL
Nhóm vị từ biến bộ
- t[X]: lấy ra một tập X các thuộc tính từ bảng t
Ví dụ: HANGHOA[MAHANG, SOLUONG]
- t[X] θ c: lấy ra một tập X các thuộc tính từ bảng t thỏa mãn điều kiện “θ c”
Ví dụ: HANGHOA[MAU] = “Đỏ”
Trong trường hợp này: θ là phép “=”; c là “Đỏ”
 Lấy ra các hàng hóa có thuộc tính MAU là “Đỏ”
- t[X] θ s[Y]: lấy ra một tập X các thuộc tính từ bảng t thỏa mãn điều kiện “θ” trong so
sánh với tập Y các thuộc tính lấy ra từ bảng s
Ví dụ: HANGHOA[TENHANG] = (HOADON[TENHANG] ^ HOADON[MAU] = “Đỏ”)
 Lấy ra từ bảng HANGHOA các hàng hóa có tên hàng trong bảng HOADON và
màu của hàng hóa đó trong bảng HOADON là màu “Đỏ”

Nhóm vị từ biến miền
Là biểu thức có dạng {< X1, X2, ... , Xn > | P(X1, X2, ... , Xn)}
Trong đó < X1, X2, ... , Xn >∈ t là một tập các thuộc tính sao cho thỏa mãn điều kiện
P(X1, X2, ... , Xn)}
Ví dụ: {<MAHANG, TENHANG, MAU, KHOILUONG> | <MAHANG, TENHANG,
MAU, KHOILUONG> ∈ HANGHOA ^ MAU = “Đỏ”}
 Lấy ra các bộ gồm các thuộc tính MAHANG, TENHANG, MAU, KHOILUONG
sao cho các bộ này đều thuộc bảng HANGHOA và MAU của bộ đó là “Đỏ”

Nhóm ngôn ngữ đại số quan hệ thuần túy ISBL
- Là cách viết khác của đại số quan hệ

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK

- Cú pháp: LIST <tên quan hệ>: <biểu thức đại số quan hệ thuần túy>
Ví dụ: LIST HANGHOA: MAU=”Đỏ”
 Liệt kê các bộ trong bảng HANGHOA có MAU là “Đỏ”
NGÔN NGỮ TRUY VẤN DỮ LIỆU CÓ CẤU TRÚC (SQL)
Riêng phần này, đi thi sẽ chỉ xoay quanh câu lệnh sau:
SELECT (DISTINCT) <X> FROM <Y> WHERE <P> GROUP BY <C> (HAVING <F>)
ORDER BY <Z> ASC|DESC
Trong đó:
• DISTINCT: Loại bỏ các dòng trùng lặp
• X: Các cột cần hiển thị. Nếu muốn hiển thị tất cả các cột thì ghi *
• Y: Tên bảng để lấy dữ liệu
• P: Các biểu thức điều kiện trên các thuộc tính (Ví dụ MAU=”Đỏ”)
• GROUP BY: Nhóm theo C (C có thể là một hay nhiều cột), có thể kèm theo điều
kiện F bằng cách sử dụng từ khóa HAVING
• ORDER BY: Sắp xếp các dòng trong kết quả truy vấn theo các cột/biểu thức Z.
Mặc định (nếu không ghi gì) sẽ sắp xếp ASC (tăng dần). Sắp xếp giảm dần thì
phải ghi DESC
Một số biểu thức khác có thể gặp:
• LIKE “S%”: Đây là biểu thức điều kiện, nghĩa là kiểm tra xem giá trị đó có bắt đầu
bằng xâu S hay không. Ví dụ: LIKE “ABC%” thì các giá trị thỏa mãn có thể là
ABCD, ABCABC, ABCDE (bắt đầu bằng ABC là thỏa mãn). Dấu % có thể thay bằng
dấu *

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
• NOT X: Biểu thức điều kiện. Nghĩa là “Phủ định của X” hay “Không phải X”
• BETWEEN x AND y: Biểu thức điều kiện. Kiểm tra xem giá trị có nằm trong đoạn
[x, y] không
• X AS Y: Thường gặp trong phần SELECT, nghĩa là lấy ra cột X nhưng không để
tên là X nữa mà đổi tên cột thành Y
Ngoài ra, đi thi còn có thể vào thêm các câu lệnh sau:
• INSERT: Chèn một bộ dữ liệu vào quan hệ
• DELETE: Xóa một hoặc nhiều bộ dữ liệu khỏi quan hệ
• ALTER TABLE: Thay đổi cấu trúc bảng
• CREATE VIEW: Tạo khung nhìn

CHƯƠNG III
LÝ THUYẾT THIẾT KẾ CƠ SỞ
DỮ LIỆU QUAN HỆ

KHÁI NIỆM
- Tập thuộc tính U: Tập hữu hạn khác rỗng bao gồm các thuộc tính
- Phụ thuộc hàm: Cho hai tập thuộc tính X, Y. Ta nói X xác định hàm cho Y hay Y phụ
thuộc hàm (vào) X (ký hiệu X → Y) nếu với mọi quan hệ r xác định trên tập thuộc tính
chứa X, Y mà u[X] = v[X] thì u[Y] = v[Y]
Ví dụ: MASINHVIEN → TENSINHVIEN
(Với mỗi MASINHVIEN phân biệt (lúc này X là MASINHVIEN) thì luôn chỉ có một
TENSINHVIEN tương ứng (lúc này Y là TENSINHVIEN) dù X và Y có nằm ở bảng u hay v
bất kỳ
- Lược đồ quan hệ R: Là cặp (U, F) trong đó:
U là tập thuộc tính
F là tập các phụ thuộc hàm xác định trên U

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK

PHỤ THUỘC HÀM
- Suy diễn logic: X→Y được gọi là suy diễn logic từ F nếu với mỗi quan hệ R bất kỳ xác
định trên R(U) thỏa mãn các phụ thuộc hàm trong tập F đã cho thì cũng thỏa mãn
X→Y.
Ví dụ: Cho R=(U, F). U = {A, B, C}; F = {A→B; B→C}
Khi đó A→C được suy diễn logic từ F
- Bao đóng: Là tập tất cả các phụ thuộc hàm được suy diễn logic từ F. Ký hiệu: F+
Hệ tiên đề Amstrong
- Phản xạ: Nếu Y ⊆ X ⊆ U thì X→Y
- Tăng trưởng: Nếu X→Y; và có một Z ⊆ U thì XZ→YZ
- Bắc cầu: Nếu X→Y; Y→Z thì X→Z
Một số tính chất khác

TÍNH TOÁN BAO ĐÓNG

Phương pháp tìm bao đóng
Cho một lược đồ R=(U,F), tập thuộc tính U và tập phụ thuộc hàm F. Tìm tập bao đóng
{A}+
với A ⊆ U

Giải

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
Trước tiên, ta quy ước với nhau một phụ thuộc hàm X→Y bất kỳ sẽ có phần X là phần
vế trái, phần Y là phần vế phải
Bước 1: Tìm trong tập phụ thuộc hàm F một phụ thuộc hàm đầu tiên mà A chứa phần
vế trái. Nếu tìm thấy thì sang bước 2, không thấy thì sang bước 3
Bước 2: Ta gom phần vế phải của phụ thuộc hàm vừa tìm được vào A. Lúc này ta có
một A mới và quay lại bước 1
Bước 3: Tập A lúc này chính là tập bao đóng {A}+

cần tìm.

Ví dụ: Cho quan hệ R=(U, F); trong đó U = {A, B, C, D}; F = {A→B, AB→C, BC→D}. Tìm
{AB}+
Giải
Ở đây ta cần tìm bao đóng của AB. Ta làm theo phương pháp trên
1. Tìm trong tập F phụ thuộc hàm đầu tiên mà AB chứa phần vế trái: Ở đây ta phát
hiện A→B thỏa mãn điều kiện.
2. Lấy phần vế phải gộp vào AB: Ở đây vế phải bằng B, AB đã có B rồi, nên ta bỏ
qua
3. Tiếp tục tìm trong tập F: Tiếp tục thấy AB→C thỏa mãn
4. Lấy phần vế phải gộp vào AB: Ở đây vế phải bằng C, AB chưa có C. Ta thu được
tập mới là ABC
5. Tìm trong tập F phụ thuộc hàm đầu tiên mà ABC chứa phần vế trái: Lúc này trong
tập F chỉ còn BC→D, và ta thấy thỏa mãn vì ABC có chứa BC.
6. Lấy phần vế phải gộp vào ABC: Ta được ABCD
7. Lúc này tập F đã được xét hết. Ta dừng lại.
Vậy bao đóng {AB}+={ABCD}
HAI TẬP PHỤ THUỘC HÀM TƯƠNG ĐƯƠNG
Cho hai tập phụ thuộc hàm F và G. Hai tập này gọi là tương đương nếu tập X→Y bất kỳ
thuộc F thì đều có thể suy diễn logic ra từ G và ngược lại. Ký hiệu: F ≈ G
Ví dụ: Cho tập F = {A→BC; A→D; CD→E} và G = {A→BCD; A→ABD; CD→E}. Kiểm tra xem
F có tương đương với G không?

Giải

- Xét F:

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
+ A→BC: Ta thấy có thể suy ra được điều này từ A→BCD thuộc G
+ A→D: Ta thấy có thể suy ra được điều này từ A→ABD thuộc G
+ CD→E: Phụ thuộc hàm này cũng thuộc G
- Tương tự kiểm tra G
=> Ta thấy rằng thỏa mãn định nghĩa hai tập phụ thuộc hàm tương đương.
Vậy F tương đương G
PHỦ TỐI THIỂU CỦA TẬP CÁC PHỤ THUỘC HÀM
- Phụ thuộc hàm đầy đủ: Cho phụ thuộc hàm X→Y. Phụ thuộc hàm này gọi là đầy đủ
nếu loại bỏ bất kỳ thuộc tính A nào đó ra khỏi X thì phụ thuộc hàm đó không còn
đúng nữa và không có thuộc tính dư thừa.
Phương pháp tìm phủ tối thiểu
Cho R = (U, F). Yêu cầu tìm phủ tối thiểu của tập F.
Giải
Trước tiên, ta quy ước với nhau một phụ thuộc hàm X→Y bất kỳ sẽ có phần X là phần
vế trái, phần Y là phần vế phải
Bước 1: Chắc chắn rằng tất cả các phụ thuộc hàm trong F đều là phụ thuộc hàm đầy
đủ. Nếu tồn tại một phụ thuộc hàm bất kỳ chưa phải là đầy đủ thì phải biến đổi nó về
dạng đầy đủ.
Bước 2: Tách tất cả các phụ thuộc hàm thành dạng phụ thuộc hàm đơn (vế trái và vế
phải chỉ có duy nhất một thuộc tính)
Bước 3: Loại bỏ tất cả các phụ thuộc hàm có thể suy diễn logic ra từ các phụ thuộc
hàm khác và các phụ thuộc hàm bị trùng lặp dư thừa.
Bước 4: Tập phụ thuộc hàm còn lại chính là phủ tối thiểu cần tìm.
Ví dụ: Cho R = (U, F) với F = {AB→CD, B→C, C→D}
Giải

- Kiểm tra tính phụ thuộc hàm đầy đủ:
Ở đây ta thấy phụ thuộc hàm AB→CD chưa phải là đầy đủ do A là thuộc tính dư
thừa. Do:
B→C; C→D => B→D. Như vậy khi B→C và B→D thì B→CD. A là không cần thiết.
Ta thay AB→CD bằng B→CD. Khi đó F = {B→CD; B→C; C→D}
- Tách các phụ thuộc hàm thành dạng đơn:
Ta được F = {B→C; B→D; B→C; C→D}

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
- Loại bỏ các phụ thuộc hàm có thể suy diễn logic và bị trùng lặp:
Ta thấy rằng có thể loại bỏ B→D vì B→C; C→D thì có thể suy ra B→D.
Loại bỏ bớt 1 B→C vì bị trùng.
Vậy phủ tối thiểu của F là F = {B→C; B→D}

KHÓA CỦA MỘT LƯỢC ĐỒ QUAN HỆ
Phương pháp xác định MỘT khóa của một lược đồ quan hệ
Cho R = (U, F). U = {X1, X2, ... , Xn} Tìm MỘT khóa của lược đồ quan hệ R?

Giải

Bước 1: Gán K = U
Bước 2: Lần lượt tính (K\Xi
)
+
với i = 1, 2, ..., n. Nếu bao đóng thu được đúng bằng U+
thì

ta loại Xi đang xét ra khỏi K.
Bước 3: K còn lại chính là một khóa của lược đồ quan hệ R
Ví dụ: Cho R = (U, F) với U = {ABCDE}; F = {AB→C, AC→B, BC→DE}. Tìm một khóa của R
xác định trên U và F?

Giải

Phương pháp xác định TẤT CẢ các khóa của một lược đồ quan hệ
Cho R = (U, F). U = {X1, X2, ... , Xn} Tìm TẤT CẢ khóa của lược đồ quan hệ R?

Giải

Bước 1: Xác định tất cả các tổ hợp (tất cả tập con) của U.
Bước 2: Lần lượt xét từng tổ hợp. Giả sử tổ hợp đang xét là Xi
.

Ta tính (Xi)
+
. Nếu (Xi)

+=U thì ta thêm Xi vào tập S

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
Bước 3: Xét tập S thu được sau khi xét hết các tổ hợp. Nếu chọn ra một Si mà có một Sj
là con của Si

(hay Si chứa Sj

) thì loại Si khỏi S.

Bước 4: Các phần tử còn lại trong S chính là tập khóa của R.
Ví dụ: Cho R = (U, F) với U = {ABC}, F = {AB→C, C→A}. Tìm tất cả các khóa của R.

Giải
1. Các tổ hợp của U là: A, B, C, AB, AC, BC, ABC
2. Tính toán:
• (A)+ = Rỗng
• (B)+ = Rỗng
• (C)+ = {CA} khác U
• (AB)+ = {ABC} = U => S = {AB}
• (AC)+ = {AC} khác U
• (BC)+ = {ABC} = U => S = {AB, BC}
• (ABC)+ = {ABC} = U => S = {AB, BC, ABC}
3. Xét S:
Ta thấy rằng, AB ⊂ ABC và BC ⊂ ABC nên loại ABC khỏi S. Lúc này S = {AB, BC}
AB không phải con của BC và ngược lại. Do đó, không cần loại phần tử nào nữa.
4. Kết luận: Vậy tập khóa của lược đồ R là K = {AB, BC}
CHUẨN HÓA LƯỢC ĐỒ QUAN HỆ
Chuẩn hóa 1NF
• Các thuộc tính đều là nguyên tố (không thể chia nhỏ thành các phần/ý nghĩa nhỏ
hơn)
• Không chứa thuộc tính đa trị (nhiều giá trị)
• Không có thuộc tính nào có thể tính toán được từ một hay một số thuộc tính
khác

Chuẩn hóa 2NF
• Là 1NF
• Các thuộc tính không phải khóa phải phụ thuộc hàm đầy đủ vào khóa chính
Phương pháp kiểm tra xem R = (U, F) có phải 2NF không?
Bước 1: Tìm tập khóa K của R.
Bước 2: Tính (Xi)+ với Xi

là tập con thực sự của các khóa K. (Tập con thực sự của U là

tập hợp con của U mà không bao gồm U)

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
Bước 3: Nếu (Xi

)+ chứa thuộc tính không khóa của R thì không phải 2NF, ngược lại

thì R đã thỏa mãn 2NF.

Chuẩn hóa 3NF
• Là 2NF
• Các thuộc tính không phải khóa phải phụ thuộc trực tiếp vào khóa chính.
Phương pháp kiểm tra xem R = (U, F) có phải 3NF không?
Bước 1: Tìm tập khóa K của R
Bước 2: Nếu có các phụ thuộc hàm X→Y trong đó Y chứa thuộc tính không khóa mà
X là siêu khóa thì R đạt chuẩn 3NF, ngược lại thì R chưa thỏa mãn 3NF

CHƯƠNG IV
TỔ CHỨC DỮ LIỆU VẬT LÝ

MÔ HÌNH TỔ CHỨC BỘ NHỚ NGOÀI
• Bộ nhớ ngoài (bộ nhớ thứ cấp) có thể là đĩa từ, băng từ, ...
• Được chia thành các khối vật ký có kích thước khác nhau; mỗi tệp dữ liệu chiếm
một khối; mỗi khối chứa nhiều bản ghi
• Các bản ghi đều có địa chỉ

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
TỔ CHỨC TỆP ĐỐNG
• Là tổ chức lưu trữ đơn giản nhất trong đó các bản ghi được lưu trữ kế tiếp nhau
trong các khối không tuân theo một thứ tự đặc biệt nào và không có tổ chức
nào áp dụng với các khối
• Các thao tác:
+ Tìm kiếm: Quét toàn bộ hoặc ít nhất một nửa tệp
+ Thêm: Tìm bản ghi cần thêm trước để tránh trùng lặp
+ Xóa: Tìm -> Đánh dấu xóa -> Xóa -> Tổ chức lại tệp
+ Sửa: Tìm -> Sửa
• Luôn luôn tốn 4 bytes để móc nối dữ liệu. Cái này cần lưu ý kỹ để làm các
bài tập hỏi về số khối cần để lưu bản ghi.
Ví dụ: Cho quan hệ SINHVIEN(MASV, HODEM, TENSV, NGAYSINH, QUEQUAN) với
MASV chiếm 4 bytes, HODEM chiếm 20 bytes, TENSV chiếm 10 bytes, NGAYSINH
chiếm 16 bytes, QUEQUAN chếm 25 bytes. Nếu mỗi khối có dung lượng 256 bytes thì
cần bao nhiêu khối để lưu được 16 bản ghi?
Giải

Ta có tổng dung lượng lưu trữ của một bản ghi là: 4 + 20 + 10 + 16 + 25 + 4 (4 bytes
móc nối dữ liệu) = 79 bytes
Như vậy mỗi khối sẽ lưu được: 256 / 79 = 3 (Là 3.24 nhưng phải lấy phần nguyên)
Vậy số khối cần để lưu được 16 bản ghi là: 16 / 3 = 5.333 = 6 (lấy hàm trần - tức là chỉ
cần có phẩy lẻ thì lấy phần nguyên rồi cộng 1)
TỔ CHỨC TỆP BĂM
- Phân chia tập hợp các bản ghi của tệp dữ liệu thành các cụm (buckets)
+ Mỗi cụm: Một hoặc nhiều khối
+ Mỗi khối: Số lượng cố định các bản ghi
+ Tổ chức lưu trữ dữ liệu: Tổ chức đống
+ Giá trị khóa: [0; B-1] (B là số cụm, có thể tiến đến cực đại)
- Giá trị khóa: Sử dụng hàm băm
Mỗi bản ghi có một khóa là x, thì hàm băm h(x) nhận một giá trị trong khoảng
[0, k] với k là một giá trị nguyên dương bất kỳ (thường k là số nguyên tố). Nên chọn
một số k là số nguyên tố nhỏ nhất thỏa mãn k >= số cụm (B).
h(x) = x mod k (x chia cho k và lấy phần dư)

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
- Lưu ý: Luôn tốn 4 bytes cho con trỏ/bản ghi
- Các thao tác:
+ Tìm kiếm:
• Tính hàm băm h(x)
• Tìm địa chỉ băm của cụm h(x)
• Thực hiện tìm kiếm của tổ chức đống
+ Thêm:
• Tìm bản ghi X
• Thêm vào khối đầu tiên trong cụm còn chỗ trống (nếu không có thì tạo khối mới)
+ Xóa:
• Tìm bản ghi
• Loại bỏ bản ghi khỏi cụm
+ Sửa:
• Tìm bản ghi X
• Loại bỏ bản ghi này và thêm vào bản ghi mới
Ví dụ: Cho quan hệ NHACC(MACC, TENCC, DIACHI, SDT, SOKHACH) với MACC chiếm 4
bytes, TENCC chiếm 20 bytes, DIACHI chiếm 20 bytes, SDT chiếm 16 bytes và
SOKHACH chiếm 18 bytes. Biết rằng mỗi khối có thể chứa được 256 bytes, NHACC có
16 bản ghi và quan hệ này được biểu diễn dưới dạng tệp băm có 5 cụm. Thực hiện
thêm bản ghi có giá trị khóa 32 vào quan hệ này. Cho biết rằng bản ghi này sẽ nằm ở
khối nào, thuộc cụm thứ bao nhiêu trong cấu trúc tệp băm?

Giải
Trước tiên, ta tính số bytes một bản ghi cần dùng:
T = 4 + 20 + 20 + 16 + 18 + 4 (4 bytes dành cho móc nối dữ liệu) = 82
Mỗi khối lưu được 256 bytes, do đó, mỗi khối lưu được 256 / 82 = 3 bản ghi
Mà NHACC có 16 bản ghi, do đó cần: 16 / 3 = 6 khối
Tổ chức tệp băm này sẽ gồm 5 cụm, biểu diễn như sau:

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
Giả sử khi ta thêm các bản ghi vào, ta sẽ được:

Bây giờ, ta chọn k = 5 (do 5 là số nguyên tố và >= B). Khi đó hàm h(x) = x mod 5
Thực hiện thêm bản ghi có khóa là 32
Khi đó, h(32) = 32 % 5 = 2. Nghĩa là ta sẽ đẩy bản ghi này vào cụm 2. Ở đây, ngay khối
đầu tiên ta thấy vẫn còn ô trống, nên ta đẩy bản ghi này vào ô trống đó.

TỔ CHỨC TỆP CHỈ DẪN
- Nhằm tạo ra tệp mới từ tệp dữ liệu ban đầu (tệp chính) sao cho tệp mới hỗ trợ tệp
ban đầu trong thực hiện một số thao tác cơ bản như thêm, cập nhật, sửa, xóa, ...
- Tệp chính: Luôn được sắp dẫn
- Một chỉ dẫn (chỉ mục) của một tệp có ý nghĩa như một danh mục để cải thiện tốc độ
cho việc tìm kiếm và tra cứu
TỔ CHỨC B-CÂY (B-TREE)
- Tổ chức theo cấp m, thỏa mãn đồng thời các tính chất sau:
+ Nút gốc của cây: Là nút lá hoặc ít nhất có 2 con
+ Mỗi nút nhánh (trừ nút lá và nút gốc) có từ [m/2] đến m cn

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
+ Mỗi đường đi (từ gốc -> lá) có độ dài bằng nhau

CHƯƠNG V
TỐI ƯU HÓA TRUY VẤN

TỔNG QUAN
- 03 bước thực hiện xử lý truy vấn:
+ Phân tích và dịch
+ Tối ưu hóa
+ Đánh giá
PHÂN TÍCH VÀ DỊCH
- Kiểm tra xem câu truy vấn có đúng cú pháp hay không: Kết quả cho ra là một cây
phân tích
- Kiểm tra ngữ nghĩa:
+ Kiểm tra xem tên quan hệ xuất hiện trong truy vấn có phải tên của các quan hệ trong
CSDL hay không
+ Kiểm tra ngữ nghĩa giữa các quan hệ trong mệnh đề FROM với các thuộc tính trong
các mệnh đề khác
+ Kiểm tra kiểu dữ liệu có phù hợp với thuộc tính hay không, tên thuộc tính có nhập
nhằng hay không
- Đưa về dạng biểu diễn trong (biểu thức quan hệ): Câu truy vấn được phân rã thành
các query block (khối truy vấn - QB)
+ Một QB chứa một biểu thức (SELECT - FROM - WHERE - GROUP BY - HAVING)
+ Các câu truy vấn lồng trong 1 câu truy vấn là các QB độc lập

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
TỐI ƯU HÓA TRUY VẤN
- Là tiến trình lựa chọn kế hoạch thực thi câu hỏi một cách hiệu quả nhất sao cho
+ Tốc độ thực thi câu truy vấn nhanh nhất có thể
+ Việc xử lý câu truy vấn chiếm dụng bộ nhớ ít nhất có thể
ĐÁNH GIÁ
- Để đặc tả đánh giá một câu hỏi:
+ Cung cấp biểu thức đại số quan hệ
+ Chú thích các chỉ thị đặc tả đánh giá mỗi phép toán
CÁC CHIẾN LƯỢC TỐI ƯU HÓA CÁC BIỂU THỨC ĐẠI SỐ QUAN HỆ
- Ưu tiên thực hiện các phép chọn và phép chiếu đầu tiên
- Tổ hợp các phép chọn xác định với tích Đề-các thành phép kết nối
- Xác định các biểu thức con chung trong một biểu thức
- Xử lý các tệp trước khi tính toán một phép kết nối
- Ước lượng chi phí và lựa chọn thứ tự thực hiện thích hợp

CHƯƠNG VI
AN TOÀN VÀ TOÀN VẸN DỮ
LIỆU

AN TOÀN DỮ LIỆU
- Xác minh người sử dụng: Đảm bảo không cho phép người sử dụng thực hiện bất cứ
thao tác nào trên CSDL nếu không có quyền làm điều đó
- Kiểm tra truy nhập
- Sử dụng các khung nhìn
- Một số lệnh an toàn dữ liệu trong SQL:
+ CREATE VIEW <tên> [ds cột] AS <câu truy vấn>: Tạo khung nhìn cho người sử dụng

Đề cương tóm tắt Cơ sở dữ liệu - SITDE PK
+ GRANT <ds thao tác> ON <đối tượng> TO <ds người sử dụng>: Cấp quyền để thực
hiện <ds các thao tác>
+ REVOKE <ds thao tác> ON <đối tượng> FROM <ds người sử dụng>: Tước quyền
thực hiện <ds các thao tác>
TOÀN VẸN DỮ LIỆU
- Ràng buộc miền: CONSTRAINT <tên ràng buộc> CHECK <điều kiện>
- Ràng buộc khóa: CONSTRAINT <tên ràng buộc> [PRIMARY KEY <ds khóa chính>] /
[UNIQUE KEY <ds khóa duy nhất>] / [FOREIGN KEY <ds khóa ngoại>]
- Các khẳng định: CREATE ASSERTION <tên khẳng định> CHECK <vị từ>
- Các kích hoạt: Một số nguyên tắc:
+ Chỉ được kiểm tra khi các sự kiện, đặc tả xuất hiện
+ Ngăn chặn lập tức sự kiện vừa phát sinh bằng một kích hoạt kiểm tra điều kiện
+ Khi điều kiện kích hoạt thỏa mãn, hành động kết hợp với kích hoạt được thực hiện
bởi DBMS
